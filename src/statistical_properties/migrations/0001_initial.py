# Generated by Django 3.0.3 on 2020-10-07 16:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BreuschPaganTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lagrange_multiplier', models.FloatField()),
                ('p_value', models.FloatField()),
                ('f_value', models.FloatField()),
                ('f_p_value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='GoldfeldQuandtTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic', models.FloatField()),
                ('p_value', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LinearityTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic', models.FloatField()),
                ('p_value', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MonotonicTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic', models.FloatField()),
                ('p_value', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NormalityTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic', models.FloatField()),
                ('p_value', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SourceDataStatisticalProperties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_mean', models.FloatField()),
                ('gem_mean', models.FloatField()),
                ('gene_standard_deviation', models.FloatField()),
                ('gem_standard_deviation', models.FloatField()),
                ('number_of_samples_evaluated', models.PositiveIntegerField()),
                ('gem_normality', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gem_normality', to='statistical_properties.NormalityTest')),
                ('gene_normality', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gene_normality', to='statistical_properties.NormalityTest')),
                ('heteroscedasticity_breusch_pagan', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='statistical_properties.BreuschPaganTest')),
                ('homoscedasticity_goldfeld_quandt', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='statistical_properties.GoldfeldQuandtTest')),
                ('linearity', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='statistical_properties.LinearityTest')),
                ('monotonicity', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='statistical_properties.MonotonicTest')),
            ],
        ),
        migrations.CreateModel(
            name='SourceDataOutliers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_identifier', models.CharField(max_length=100)),
                ('expression', models.FloatField()),
                ('is_gene_data', models.BooleanField()),
                ('stats_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outliers', to='statistical_properties.SourceDataStatisticalProperties')),
            ],
        ),
    ]
