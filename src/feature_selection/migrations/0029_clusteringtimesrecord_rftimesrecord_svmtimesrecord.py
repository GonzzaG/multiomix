# Generated by Django 3.2.13 on 2023-06-14 21:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('feature_selection', '0028_fsexperiment_app_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='SVMTimesRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_features', models.PositiveIntegerField()),
                ('number_of_samples', models.PositiveIntegerField()),
                ('execution_time', models.PositiveIntegerField()),
                ('test_time', models.PositiveIntegerField()),
                ('parameters', models.TextField(blank=True, null=True)),
                ('fitness', models.FloatField(blank=True, null=True)),
                ('train_score', models.FloatField(blank=True, null=True)),
                ('number_of_iterations', models.PositiveIntegerField()),
                ('time_by_iteration', models.PositiveIntegerField()),
                ('max_iterations', models.PositiveIntegerField()),
                ('optimizer', models.CharField(choices=[('avltree', 'Avl Tree'), ('rbtree', 'Rb Tree')], max_length=10)),
                ('kernel', models.IntegerField(choices=[(1, 'Linear'), (2, 'Polynomial'), (3, 'Rbf')])),
                ('fs_experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='svm_times_records', to='feature_selection.fsexperiment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RFTimesRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_features', models.PositiveIntegerField()),
                ('number_of_samples', models.PositiveIntegerField()),
                ('execution_time', models.PositiveIntegerField()),
                ('test_time', models.PositiveIntegerField()),
                ('parameters', models.TextField(blank=True, null=True)),
                ('fitness', models.FloatField(blank=True, null=True)),
                ('train_score', models.FloatField(blank=True, null=True)),
                ('fs_experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rf_times_records', to='feature_selection.fsexperiment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClusteringTimesRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_features', models.PositiveIntegerField()),
                ('number_of_samples', models.PositiveIntegerField()),
                ('execution_time', models.PositiveIntegerField()),
                ('test_time', models.PositiveIntegerField()),
                ('parameters', models.TextField(blank=True, null=True)),
                ('fitness', models.FloatField(blank=True, null=True)),
                ('train_score', models.FloatField(blank=True, null=True)),
                ('fs_experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clustering_times_records', to='feature_selection.fsexperiment')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
