services:
    # PostgreSQL
    db:
        image: postgres:16
        restart: 'always'
        container_name: multiomics_dev_db
        ports:
            - '5432:5432'
        command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
        environment:
            POSTGRES_USER: root
            POSTGRES_PASSWORD: example
            POSTGRES_DB: multiomics
        volumes:
            - postgres_data:/var/lib/postgresql/data/
            - ./config/postgres/postgres.conf:/etc/postgresql/postgresql.conf

    # MongoDB Server
    mongo:
        image: mongo:4.2
        restart: 'always'
        container_name: multiomics_dev_mongo_db
        ports:
            - '27017:27017'
        # Sets the config file
        command: --config /etc/mongo/mongod.conf
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        volumes:
            - mongo_data:/data/db
            - mongo_config:/data/configdb
            - ./config/mongo/mongod.conf:/etc/mongo/mongod.conf

    # Redis Server for Websocket connections
    redis:
        image: redis:6.2.14-alpine
        restart: 'always'
        container_name: multiomics_dev_websocket_channel_redis
        volumes:
            - redis_data:/data
        ports:
            - "6379:6379"


    # Celery worker (useful for Windows until GGCA is supported in that OS)
    # dev-correlation-analysis-worker:
    #     # Builds from the Dockerfile-celery
    #     build:
    #         context: .
    #         dockerfile: Dockerfile-celery
    #     restart: always
    #     depends_on:
    #         - db
    #         - redis
    #     volumes:
    #         - ./src/media:/src/media
    #         # The volume below are mandatory as Pagedjs-cli needs to access to static files (css and fonts)
    #         - ./src/static:/src/static
    #     environment:
    #         # Celery parameters
    #         QUEUE_NAME: 'correlation_analysis'  # This MUST NOT be changed
    #         CONCURRENCY: 1

    #         # NOTE: in case of changes in the 'web' and/or PostgreSQL connection parameters, they MUST be
    #         # changed here too!
    #         # PostgreSQL DB connection parameters (MUST match the parameters defined in the "db" service above)
    #         POSTGRES_USERNAME: 'root'
    #         POSTGRES_PASSWORD: 'example'
    #         POSTGRES_HOST: 'db'
    #         POSTGRES_PORT: 5432
    #         POSTGRES_DB: 'multiomics'

    #         # Redis
    #         REDIS_HOST: 'redis'
    #         REDIS_PORT: 6379


volumes:
    mongo_data:
        external: true
        name: 'multiomics_intermediate_mongo_data'
    mongo_config:
        external: true
        name: 'multiomics_intermediate_mongo_config'
    postgres_data:
        external: true
        name: 'multiomics_intermediate_postgres_data'
    redis_data:
        external: true
        name: 'multiomics_intermediate_redis_data'
